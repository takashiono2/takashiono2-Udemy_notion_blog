import PageNation from "@/components/PageNation/PageNation";
import { SinglePost } from "../../../components/Post/SinglePost";
import { getNumberOfPages, getPostByPage } from "../../../lib/notionAPI";
import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";


export const getStaticPaths: GetStaticPaths = async () => {

  const numberOfPage: number = await getNumberOfPages();
  let params = [];
  for(let i = 1; i< numberOfPage ; i++){
    params.push({ params: { page: i.toString() }})
  }

  return {
    paths: params,
    fallback: "blocking",
  }

}

export const getStaticProps: GetStaticProps = async (context) => {
  const currentPage = context.params?.page;
  const postsByPage = await getPostByPage(
    parseInt(currentPage!.toString(), 10)
  );
  const numberOfPage: number = await getNumberOfPages();
  return {
    props: {
      postsByPage,
      numberOfPage
    },
    revalidate: 60 * 60 * 6,
  }
}

const BlogPageList = ({ postsByPage, numberOfPage }) => {

  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">Notion BlogðŸš€</h1>
        <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
          {postsByPage.map((post) => (
            <div key={post.id}>
              <SinglePost
                title={post.title}
                description={post.description}
                date={post.date}
                tags={post.tags}
                slug={post.slug}
                isPagenationPage={true}
              />
            </div>
          ))}
        </section>
        <PageNation numberOfPage = {numberOfPage} tag={""}/>
      </main>
    </div>
  );
}

export default BlogPageList;
